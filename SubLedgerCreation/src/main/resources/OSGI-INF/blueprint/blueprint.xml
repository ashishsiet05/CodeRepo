<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd            http://camel.apache.org/schema/blueprint/cxf  http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd">
    <cm:property-placeholder persistent-id="CCAConnection" update-strategy="reload"/>
    <!-- Rest Service endpoint declaration -->
    <cxf:rsServer address="${ReceiveSubLedgerRequest}"
        id="SubLedgerRestEndpoint" serviceClass="com.magma.SubLedgerCreation.SubLedgerRestService"/>
    <!-- JDBC Datasource connection declaration -->
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="CCAUATDBConnection">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="${CCAJDBCURL}"/>
        <property name="username" value="${Username}"/>
        <property name="password" value="${Password}"/>
        <property name="validationQuery" value="select 1 from dual"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <!-- configure the Camel SQL component to use the JDBC data source -->
    <bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
        <property name="dataSource" ref="CCAUATDBConnection"/>
    </bean>
    <!-- Bean Declarations -->
    <bean class="com.magma.SubLedgerCreation.ErrorAcknowledger" id="ErrorAckProcessor"/>
    <bean class="com.magma.SubLedgerCreation.GetLog" id="getlog"/>
    <camelContext id="SubLedger" useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- Data formats Declarations -->
        <dataFormats>
            <xmljson elementName="SubLedgerRequest"
                expandableProperties="SubLedgerRequest"
                forceTopLevelObject="true" id="SubLedgerRequest"
                rootName="SubLedgerRequest" skipNamespaces="true" trimSpaces="true"/>
            <json id="json" library="Jackson"/>
        </dataFormats>
        <!-- -->
        <route autoStartup="true" id="SubLedgerRoute" startupOrder="1">
            <from id="ReceiveFIAllocationRequest" uri="cxfrs:bean:SubLedgerRestEndpoint"/>
            <setHeader headerName="requestType" id="Request">
                <simple>Source Request</simple>
            </setHeader>
            <setProperty id="Propertyesbtxnid" propertyName="esbtxnid">
                <simple>${header.esb-txnid}</simple>
            </setProperty>
            <setProperty id="Propertyesbsource" propertyName="esbsource">
                <simple>${header.esb-source}</simple>
            </setProperty>
            <to id="_to1" pattern="InOnly" uri="seda:Subledgerlog"/>
            <to id="validateheader" uri="direct-vm:processHeader"/>
            <choice id="headerProcessing">
                <when id="Missingheader">
                    <simple>${header.Error} == 'MissingHeader'</simple>
                </when>
                <otherwise id="SuccessPath">
                    <unmarshal id="UnamarshalLosRequest" ref="SubLedgerRequest"/>
                    <setHeader headerName="EnqNo" id="setBatchNo">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/loanApplnNo</xpath>
                    </setHeader>
                    <setHeader headerName="LocationCode" id="setLocationCode">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/locCode</xpath>
                    </setHeader>
                    <setHeader headerName="DivisionCode" id="setDivisionCode">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/divCode</xpath>
                    </setHeader>
                    <setHeader headerName="PartyName" id="setPartyName">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/partyName</xpath>
                    </setHeader>
                    <setHeader headerName="CompCode" id="setCompCode">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/compCode</xpath>
                    </setHeader>
                    <setHeader headerName="EnqSourceCode" id="setCompCode">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/sourceCode</xpath>
                    </setHeader>
                    <setHeader headerName="EnqDate" id="setEnqDate">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/enqDate</xpath>
                    </setHeader>
                    <setHeader headerName="RequiredAmount" id="setRequiredAmount">
                        <xpath resultType="java.lang.String">/SubLedgerRequest/reqAmnt</xpath>
                    </setHeader>
                    <to id="_to1" uri="sql-stored:Navoday_Staging.Proc_Submit_Enq_For_Subledger(VARCHAR ${headers.esb-txnid},VARCHAR ${headers.CompCode},VARCHAR ${headers.EnqNo},VARCHAR ${headers.DivisionCode},VARCHAR ${headers.LocationCode},DATE ${headers.EnqDate},VARCHAR ${headers.EnqSourceCode},VARCHAR ${headers.RequiredAmount},VARCHAR ${headers.PartyName},OUT VARCHAR P_STATUS,OUT VARCHAR P_STATUS_MSG,OUT INTEGER P_REF_ID,OUT VARCHAR P_CCA_PROPOSAL_NO )?dataSource=#CCAUATDBConnection"/>
                    <marshal id="_marshal1" ref="json"/>
                    <setProperty id="SEResp" propertyName="requestType">
                        <simple>Source Response</simple>
                    </setProperty>
                    <setHeader headerName="status1" id="succses">
                        <simple>success</simple>
                    </setHeader>
                    <to id="success" pattern="InOnly" uri="seda:Subledgerlog"/>
                </otherwise>
            </choice>
            <onException id="HandleException" useOriginalMessage="true">
                <exception>java.lang.Exception</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <setProperty id="_setProperty1" propertyName="ErrorOccured">
                    <constant>yes</constant>
                </setProperty>
                <setProperty id="setExpMsg" propertyName="ExpMsg">
                    <simple>${exception.message}</simple>
                </setProperty>
                <process id="processErrorResp" ref="ErrorAckProcessor"/>
                <marshal id="MarshalErrorResponse">
                    <json library="Jackson" prettyPrint="true"/>
                </marshal>
                <convertBodyTo id="ErrorReponse" type="java.lang.String"/>
                <setHeader headerName="status1" id="error">
                    <simple>error</simple>
                </setHeader>
                <setProperty id="SEResp" propertyName="requestType">
                    <simple>Source Response</simple>
                </setProperty>
                <to id="success" pattern="InOnly" uri="seda:Subledgerlog"/>
            </onException>
        </route>
        <route id="_route1">
            <from id="_from1" uri="seda:Subledgerlog"/>
            <setBody id="_setBody2">
                <simple>{"txnid":"${exchangeProperty.esbtxnid}","source":"${exchangeProperty.esbsource}","timestamp":"${date:now:dd-yyyy-MM HH-mm-ss}","Type":"${header.requestType}","Payload":${body},"status":"${header.status1}"}</simple>
            </setBody>
            <!-- <bean id="_bean1" method="getLog('${body}')" ref="getlog"/> -->
            <log id="_log1" message="${body}"/>
        </route>
    </camelContext>
</blueprint>
