<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                    http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd                    http://camel.apache.org/schema/blueprint/cxf  http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd">
    <cm:property-placeholder persistent-id="CCAConnection" update-strategy="reload"/>
    <!-- Rest Service Endpoint -->
    <cxf:rsServer address="${GetForeClosureChargesRequest}"
        id="GetForeClosureChargesRestEndpoint" serviceClass="com.magma.GetForeClosureCharges.GetForeClosureChargesRestService"/>
    <!-- Bean Declaration -->
    <bean class="com.magma.GetForeClosureCharges.ErrorAcknowledger" id="ErrorAckProcessor"/>
    <camelContext id="GetForeClosureCharges" useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint">
        <route autoStartup="true" id="GetForeClosureChargesRoute" startupOrder="1">
            <!-- Handle Missing ESB Headers -->
            <from id="ReceiveGetForeClosureRequest" uri="cxfrs:bean:GetForeClosureChargesRestEndpoint"/>
            <setHeader headerName="requestType" id="Request">
                <simple>Source Request</simple>
            </setHeader>
            <setProperty id="Propertyesbtxnid" propertyName="esbtxnid">
                <simple>${header.esb-txnid}</simple>
            </setProperty>
            <setProperty id="Propertyesbsource" propertyName="esbsource">
                <simple>${header.esb-source}</simple>
            </setProperty>
            <setHeader headerName="esbtxnid" id="_setHeader1">
                <simple>${header.esb-txnid}</simple>
            </setHeader>
            <to id="_to1" pattern="InOnly" uri="seda:GetForeClosureChargesLog"/>
            <to id="validateheader" uri="direct-vm:processHeader"/>
            <choice id="headerProcessing">
                <when id="Missingheader">
                    <simple>${header.Error} == 'MissingHeader'</simple>
                </when>
                <otherwise id="SuccessPath">
                    <setProperty id="setESBTxnid" propertyName="esbtxnid">
                        <simple>${in.header.esb-txnid}</simple>
                    </setProperty>
                    <removeHeaders id="_removeHeaders1" pattern="*"/>
                    <setHeader headerName="HTTP_METHOD" id="setHttpMethod">
                        <constant>POST</constant>
                    </setHeader>
                    <setHeader headerName="CONTENT_TYPE" id="setContentType">
                        <constant>application/json</constant>
                    </setHeader>
                    <convertBodyTo charset="utf-8"
                        id="convertByteStream" type="java.lang.byte[]"/>
                    <to id="callCCAService" pattern="InOut" uri="{{CCAEndpoint}}"/>
                    <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
                    <setHeader headerName="status" id="_setHeader1">
                        <jsonpath>$.status</jsonpath>
                    </setHeader>
                    <choice id="_choice1">
                        <when id="FailureTransition">
                            <simple>${in.header.status} ==  'FAILURE'</simple>
                            <log id="_log6" message="Error Trassition"/>
                            <setHeader headerName="errorCode" id="_setHeader2">
                                <jsonpath>$.errorCode</jsonpath>
                            </setHeader>
                            <setHeader headerName="responseMsg" id="_setHeader3">
                                <jsonpath>$.responseMsg</jsonpath>
                            </setHeader>
                            <process id="CCAErrorResponse" ref="ErrorAckProcessor"/>
                            <marshal id="MarshalBussErrorResponse">
                                <json library="Jackson" prettyPrint="true"/>
                            </marshal>
                            <convertBodyTo id="BussErrorResponse" type="java.lang.String"/>
                            <setHeader headerName="status1" id="succses">
                                <simple>error</simple>
                            </setHeader>
                            <setProperty id="SResp" propertyName="requestType">
                                <simple>Target Response</simple>
                            </setProperty>
                            <to id="success" pattern="InOnly" uri="seda:GetForeClosureChargesLog"/>
                        </when>
                        <otherwise id="SuccessTransition">
                            <!--  <unmarshal id="UnmarshalCCAResponse" ref="jsonxmlWithOptions"/>
                            <to id="TransformCCAResponse" uri="xslt:./XSLT/CCAResponse.xsl"/> -->
                            <!--   <marshal id="MarshalLOSRepsonse" ref="LosResponse"/> -->
                            <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
                            <setHeader headerName="status1" id="succses">
                                <simple>success</simple>
                            </setHeader>
                            <setProperty id="SResp" propertyName="requestType">
                                <simple>Source Response</simple>
                            </setProperty>
                            <to id="success" pattern="InOnly" uri="seda:GetForeClosureChargesLog"/>
                        </otherwise>
                    </choice>
                </otherwise>
            </choice>
            <onException id="HandleException" useOriginalMessage="true">
                <exception>java.lang.Exception</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <setProperty id="_setProperty1" propertyName="ErrorOccured">
                    <constant>yes</constant>
                </setProperty>
                <setProperty id="setExpMsg" propertyName="ExpMsg">
                    <simple>${exception.message}</simple>
                </setProperty>
                <process id="processErrorResp" ref="ErrorAckProcessor"/>
                <marshal id="MarshalTechErrorResponse">
                    <json library="Jackson" prettyPrint="true"/>
                </marshal>
                <convertBodyTo id="TechErrorReponse" type="java.lang.String"/>
                <setHeader headerName="status1" id="succses">
                    <simple>error</simple>
                </setHeader>
                <setProperty id="SResp" propertyName="requestType">
                    <simple>Source Response</simple>
                </setProperty>
                <to id="success" pattern="InOnly" uri="seda:GetForeClosureChargesLog"/>
            </onException>
        </route>
        <route id="_route1">
            <from id="_from1" uri="seda:GetForeClosureChargesLog"/>
            <log id="_log1" message="seda block for logging"/>
            <setBody id="_setBody2">
                <simple>{"txnid":"${exchangeProperty.esbtxnid}","source":"${exchangeProperty.esbsource}","timestamp":"${date:now:dd-yyyy-MM HH-mm-ss}","Type":"${header.requestType}","Payload":${body},"status":"${header.status1}"}</simple>
            </setBody>
            <log id="_log3" message="${body}"/>
        </route>
    </camelContext>
</blueprint>
